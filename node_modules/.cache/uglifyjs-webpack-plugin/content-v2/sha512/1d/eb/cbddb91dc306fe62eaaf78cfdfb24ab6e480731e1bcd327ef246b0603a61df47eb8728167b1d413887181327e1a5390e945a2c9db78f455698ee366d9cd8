{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/brad/Desktop/Neural Networks/nn-tictactoe/src/matrix.js\",\"/Users/brad/Desktop/Neural Networks/nn-tictactoe/src/nn.js\",\"/Users/brad/Desktop/Neural Networks/nn-tictactoe/src/main.js\",\"/Users/brad/Desktop/Neural Networks/nn-tictactoe/src/board.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"r\",\"value\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"Matrix\",\"constructor\",\"rows\",\"cols\",\"this\",\"data\",\"Array\",\"j\",\"[object Object]\",\"arr\",\"length\",\"a\",\"b\",\"result\",\"toArray\",\"push\",\"randomize\",\"Math\",\"random\",\"add\",\"other\",\"m1\",\"m2\",\"console\",\"log\",\"sum\",\"k\",\"multiply\",\"map\",\"fn\",\"val\",\"matrix\",\"print\",\"table\",\"sigmoid\",\"x\",\"exp\",\"dsigmoid\",\"y\",\"nn_NeuralNetwork\",\"numI\",\"numH\",\"numO\",\"input_nodes\",\"hidden_nodes\",\"output_nodes\",\"weights_ih\",\"weights_ho\",\"bias_h\",\"bias_o\",\"learning_constant\",\"total_trainings\",\"feedForward\",\"input_array\",\"inputs\",\"fromArray\",\"hidden\",\"output\",\"train\",\"target_array\",\"outputs\",\"targets\",\"output_errors\",\"subtract\",\"gradients\",\"hidden_T\",\"transpose\",\"weight_ho_deltas\",\"who_t\",\"hidden_errors\",\"hidden_gradient\",\"inputs_T\",\"weight_ih_deltas\",\"INPUT_SIZE\",\"HIDDEN_SIZE\",\"OUTPUT_SIZE\",\"board_amount\",\"global_networks\",\"board\",\"$\",\"document\",\"ready\",\"amount_boards\",\"moves\",\"setPlayers\",\"update\",\"playMove\",\"player\",\"moveIndex\",\"flipTurn\",\"turn\",\"move\",\"text\",\"floor\",\"human\",\"computer\",\"NUMBER_OF_GAMES\",\"amount_ns\",\"i_amount\",\"h_amount\",\"o_amount\",\"array\",\"createNN\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"/\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"export default class Matrix {\\n  constructor(rows, cols) {\\n    this.rows = rows;\\n    this.cols = cols;\\n    this.data = new Array(rows);\\n\\n    for (let i = 0; i < this.rows; i++) {\\n      this.data[i] = new Array(cols);\\n      for (let j = 0; j < this.cols; j++) {\\n        this.data[i][j] = 0;\\n      }\\n    }\\n  }\\n\\n  static fromArray(arr) {\\n    let m = new Matrix(arr.length,1);\\n    for (let i = 0; i < arr.length; i++) {\\n      m.data[i][0] = arr[i];\\n    }\\n    return m;\\n  }\\n\\n  static subtract(a, b) {\\n    let result = new Matrix(a.rows, a.cols);\\n    for (let i = 0; i < a.rows; i++) {\\n      for (let j = 0; j < a.cols; j++) {\\n        result.data[i][j] = a.data[i][j] - b.data[i][j];\\n      }\\n    }\\n    return result;\\n  }\\n\\n  toArray() {\\n    let arr = [];\\n    for (let i = 0; i < this.rows; i++) {\\n      for (let j = 0; j < this.cols; j++) {\\n        arr.push(this.data[i][j]);\\n      }\\n    }\\n    return arr;\\n  }\\n\\n  randomize() {\\n    for (let i = 0; i < this.rows; i++) {\\n      for (let j = 0; j < this.cols; j++) {\\n        this.data[i][j] = Math.random();\\n        if(Math.random() < 0.5) {\\n          this.data[i][j] *= -1;\\n        }\\n      }\\n    }\\n  }\\n\\n  add(other) {\\n    // Are we trying to add a Matrix?7\\n    if (other instanceof Matrix) {\\n      for (let i = 0; i < this.rows; i++) {\\n        for (let j = 0; j < this.cols; j++) {\\n          this.data[i][j] += other.data[i][j];\\n        }\\n      }\\n    // Or just a single scalar value?\\n    } else {\\n      for (let i = 0; i < this.rows; i++) {\\n        for (let j = 0; j < this.cols; j++) {\\n          this.data[i][j] += other;\\n        }\\n      }\\n    }\\n  }\\n\\n  static multiply(m1, m2) {\\n    if(m1.cols !== m2.rows) {\\n      console.log('m1s columns need to be equal to m2s rows.');\\n      return undefined;\\n    }\\n\\n    let result = new Matrix(m1.rows,m2.cols);\\n\\n    for (let i = 0; i < result.rows; i++) {\\n      for (let j = 0; j < result.cols; j++) {\\n        let sum = 0;\\n        for (let k = 0; k < m1.cols; k++) {\\n          sum+= m1.data[i][k] * m2.data[k][j];\\n        }\\n        result.data[i][j] = sum;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  multiply(n) {\\n    if(n instanceof Matrix) {\\n      for (let i = 0; i < this.rows; i++) {\\n        for (let j = 0; j < this.cols; j++) {\\n          this.data[i][j] *= n.data[i][j];\\n        }\\n      }\\n    } else {\\n      for (let i = 0; i < this.rows; i++) {\\n        for (let j = 0; j < this.cols; j++) {\\n          this.data[i][j] *= n;\\n        }\\n      }\\n    }\\n  }\\n\\n  map(fn) {\\n    for (let i = 0; i < this.rows; i++) {\\n      for (let j = 0; j < this.cols; j++) {\\n        let val = this.data[i][j];\\n        this.data[i][j] = fn(val);\\n      }\\n    }\\n  }\\n\\n  static map(matrix, fn) {\\n    let result =  new Matrix(matrix.rows,matrix.cols);\\n    for (let i = 0; i < matrix.rows; i++) {\\n      for (let j = 0; j < matrix.cols; j++) {\\n        let val = matrix.data[i][j];\\n        result.data[i][j] = fn(val);\\n      }\\n    }\\n\\n    return result;\\n  }\\n\\n  static transpose(matrix) {\\n    let result = new Matrix(matrix.cols, matrix.rows);\\n    for (let i = 0; i < result.rows; i++) {\\n      for (let j = 0; j < result.cols; j++) {\\n        result.data[i][j] = matrix.data[j][i];\\n      }\\n    }\\n    return result;\\n  }\\n\\n  print() {\\n    console.table(this.data);\\n  }\\n}\\n\",\"import Matrix from './matrix.js';\\n\\n// The sigmoid function\\nfunction sigmoid(x) {\\n  return (1 / (1 + Math.exp(-x)))*2-1;\\n}\\n\\n// The derivative of the sigmoid\\nfunction dsigmoid(y) {\\n  return (y * (1 - y))*2;\\n}\\n\\nexport default class NeuralNetwork {\\n  constructor(numI, numH, numO) {\\n    this.input_nodes = numI;\\n    this.hidden_nodes = numH;\\n    this.output_nodes = numO;\\n\\n    this.weights_ih = new Matrix(this.hidden_nodes, this.input_nodes);\\n    this.weights_ho = new Matrix(this.output_nodes, this.hidden_nodes);\\n    this.weights_ih.randomize();\\n    this.weights_ho.randomize();\\n\\n    this.bias_h = new Matrix(this.hidden_nodes,1);\\n    this.bias_o = new Matrix(this.output_nodes,1);\\n    this.bias_h.randomize();\\n    this.bias_o.randomize();\\n\\n    this.learning_constant = 0.1;\\n\\n    this.total_trainings = 0;\\n  }\\n\\n  // This function generates its guess based upon inputs\\n  feedForward(input_array) {\\n    // Convert input_array to Matrix\\n    let inputs = Matrix.fromArray(input_array);\\n\\n    // Generate hidden layer values\\n    let hidden = Matrix.multiply(this.weights_ih, inputs);\\n    // Add bias\\n    hidden.add(this.bias_h);\\n    // Apply activation function\\n    hidden.map(sigmoid);\\n\\n    // Generating final output\\n    let output = Matrix.multiply(this.weights_ho, hidden);\\n    //Add bias\\n    output.add(this.bias_o);\\n    // Apply activation function\\n    output.map(sigmoid);\\n\\n    // Returning output as an Array\\n    return output.toArray();\\n  }\\n\\n  // This function modifies the weights and bias based upon the expected output using gradient descent\\n  train(input_array, target_array) {\\n    // Convert input_array to Matrix\\n    let inputs = Matrix.fromArray(input_array);\\n\\n    // Generate hidden layer values\\n    let hidden = Matrix.multiply(this.weights_ih, inputs);\\n    // Add bias\\n    hidden.add(this.bias_h);\\n    // Apply activation function\\n    hidden.map(sigmoid);\\n\\n    // Generating final output\\n    let outputs = Matrix.multiply(this.weights_ho, hidden);\\n    // Add bias\\n    outputs.add(this.bias_o);\\n    // Apply activation function\\n    outputs.map(sigmoid);\\n\\n    // Convert array to matrix\\n    let targets = Matrix.fromArray(target_array);\\n    // Calculate output errors\\n    let output_errors = Matrix.subtract(targets, outputs);\\n\\n    // Calculate gradient\\n    let gradients = Matrix.map(outputs, dsigmoid);\\n    gradients.multiply(output_errors);\\n    gradients.multiply(this.learning_constant);\\n\\n    // Calculate deltas\\n    let hidden_T = Matrix.transpose(hidden);\\n    let weight_ho_deltas = Matrix.multiply(gradients, hidden_T);\\n\\n    // Adjust weights with deltas\\n    this.weights_ho.add(weight_ho_deltas);\\n    // Adjust bias with gradients\\n    this.bias_o.add(gradients);\\n\\n    // Calculate hidden layer error\\n    let who_t = Matrix.transpose(this.weights_ho);\\n    let hidden_errors = Matrix.multiply(who_t, output_errors);\\n\\n    // Calculate hidden gradient\\n    let hidden_gradient = Matrix.map(hidden, dsigmoid);\\n    hidden_gradient.multiply(hidden_errors);\\n    hidden_gradient.multiply(this.learning_constant);\\n\\n    // Calculate deltas\\n    let inputs_T = Matrix.transpose(inputs);\\n    let weight_ih_deltas = Matrix.multiply(hidden_gradient, inputs_T);\\n\\n    // Adjust weights with deltas\\n    this.weights_ih.add(weight_ih_deltas);\\n    // Adjust bias with gradient\\n    this.bias_h.add(hidden_gradient);\\n  }\\n}\\n\",\"import Board from './board.js';\\nimport NeuralNetwork from './nn.js';\\n\\n// Define network shape\\nconst INPUT_SIZE = 9;\\nconst HIDDEN_SIZE = 18;\\nconst OUTPUT_SIZE = 9;\\n\\n// Define amount of games (should be even number)\\nconst NUMBER_OF_GAMES = 8;\\n\\nlet board_amount;\\nlet global_networks;\\nlet board;\\n\\n$(document).ready(function() {\\n  board = new Board();\\n  initBoards(Math.floor(NUMBER_OF_GAMES/2));\\n});\\n\\nfunction initBoards(amount_boards) {\\n  let num_networks = amount_boards * 2;\\n  board_amount = amount_boards;\\n  global_networks = createNN(num_networks, INPUT_SIZE, HIDDEN_SIZE, OUTPUT_SIZE);\\n\\n\\n}\\n\\nfunction createNN(amount_ns, i_amount, h_amount, o_amount) {\\n  let array = [];\\n  for(let i = 0; i < amount_ns; i++) {\\n    array.push(new NeuralNetwork(i_amount, h_amount, o_amount));\\n  }\\n  return array;\\n}\\n\",\"export default class Board {\\n  constructor() {\\n    this.moves = [0,1,2,3,4,5,6,7,8];\\n    this.setPlayers();\\n    this.update();\\n  }\\n\\n  playMove(player, moveIndex) {\\n    if(moveIndex >= this.moves.length || moveIndex < 0) {\\n      return 1;\\n    } else if(this.moves[moveIndex] === 'x' || this.moves[moveIndex] === 'o') {\\n      return 1;\\n    } else {\\n      this.moves[moveIndex] = player;\\n      this.flipTurn();\\n      this.update();\\n    }\\n  }\\n\\n  flipTurn() {\\n    if(this.turn === 1) {\\n      this.turn =  2;\\n    } else {\\n      this.turn = 1;\\n    }\\n  }\\n\\n  update() {\\n    this.moves.map((move, i) => {\\n      if(move !== 'x' && move !== 'o') {\\n        $('#' + i).text(' ');\\n      } else {\\n        $('#' + i).text(move)\\n      }\\n    })\\n  }\\n\\n  setPlayers() {\\n    let h = Math.floor(Math.random() * 2);\\n    if(h === 0) {\\n      this.human = 'x';\\n      this.computer = 'o';\\n    } else {\\n      this.human = 'o';\\n      this.computer = 'x';\\n    }\\n    $('#players').text('Human: ' + this.human + \\\" | Computer: \\\" + this.computer);\\n  }\\n}\\n\"]}","code":"!function(t){var s={};function e(o){if(s[o])return s[o].exports;var i=s[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=s,e.d=function(t,s,o){e.o(t,s)||Object.defineProperty(t,s,{configurable:!1,enumerable:!0,get:o})},e.r=function(t){Object.defineProperty(t,\"__esModule\",{value:!0})},e.n=function(t){var s=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(s,\"a\",s),s},e.o=function(t,s){return Object.prototype.hasOwnProperty.call(t,s)},e.p=\"/\",e(e.s=0)}([function(t,s,e){\"use strict\";e.r(s);class o{constructor(t,s){this.rows=t,this.cols=s,this.data=new Array(t);for(let t=0;t<this.rows;t++){this.data[t]=new Array(s);for(let s=0;s<this.cols;s++)this.data[t][s]=0}}static fromArray(t){let s=new o(t.length,1);for(let e=0;e<t.length;e++)s.data[e][0]=t[e];return s}static subtract(t,s){let e=new o(t.rows,t.cols);for(let o=0;o<t.rows;o++)for(let i=0;i<t.cols;i++)e.data[o][i]=t.data[o][i]-s.data[o][i];return e}toArray(){let t=[];for(let s=0;s<this.rows;s++)for(let e=0;e<this.cols;e++)t.push(this.data[s][e]);return t}randomize(){for(let t=0;t<this.rows;t++)for(let s=0;s<this.cols;s++)this.data[t][s]=Math.random(),Math.random()<.5&&(this.data[t][s]*=-1)}add(t){if(t instanceof o)for(let s=0;s<this.rows;s++)for(let e=0;e<this.cols;e++)this.data[s][e]+=t.data[s][e];else for(let s=0;s<this.rows;s++)for(let e=0;e<this.cols;e++)this.data[s][e]+=t}static multiply(t,s){if(t.cols!==s.rows)return void console.log(\"m1s columns need to be equal to m2s rows.\");let e=new o(t.rows,s.cols);for(let o=0;o<e.rows;o++)for(let i=0;i<e.cols;i++){let r=0;for(let e=0;e<t.cols;e++)r+=t.data[o][e]*s.data[e][i];e.data[o][i]=r}return e}multiply(t){if(t instanceof o)for(let s=0;s<this.rows;s++)for(let e=0;e<this.cols;e++)this.data[s][e]*=t.data[s][e];else for(let s=0;s<this.rows;s++)for(let e=0;e<this.cols;e++)this.data[s][e]*=t}map(t){for(let s=0;s<this.rows;s++)for(let e=0;e<this.cols;e++){let o=this.data[s][e];this.data[s][e]=t(o)}}static map(t,s){let e=new o(t.rows,t.cols);for(let o=0;o<t.rows;o++)for(let i=0;i<t.cols;i++){let r=t.data[o][i];e.data[o][i]=s(r)}return e}static transpose(t){let s=new o(t.cols,t.rows);for(let e=0;e<s.rows;e++)for(let o=0;o<s.cols;o++)s.data[e][o]=t.data[o][e];return s}print(){console.table(this.data)}}function i(t){return 1/(1+Math.exp(-t))*2-1}function r(t){return t*(1-t)*2}class a{constructor(t,s,e){this.input_nodes=t,this.hidden_nodes=s,this.output_nodes=e,this.weights_ih=new o(this.hidden_nodes,this.input_nodes),this.weights_ho=new o(this.output_nodes,this.hidden_nodes),this.weights_ih.randomize(),this.weights_ho.randomize(),this.bias_h=new o(this.hidden_nodes,1),this.bias_o=new o(this.output_nodes,1),this.bias_h.randomize(),this.bias_o.randomize(),this.learning_constant=.1,this.total_trainings=0}feedForward(t){let s=o.fromArray(t),e=o.multiply(this.weights_ih,s);e.add(this.bias_h),e.map(i);let r=o.multiply(this.weights_ho,e);return r.add(this.bias_o),r.map(i),r.toArray()}train(t,s){let e=o.fromArray(t),a=o.multiply(this.weights_ih,e);a.add(this.bias_h),a.map(i);let n=o.multiply(this.weights_ho,a);n.add(this.bias_o),n.map(i);let h=o.fromArray(s),l=o.subtract(h,n),d=o.map(n,r);d.multiply(l),d.multiply(this.learning_constant);let u=o.transpose(a),c=o.multiply(d,u);this.weights_ho.add(c),this.bias_o.add(d);let f=o.transpose(this.weights_ho),p=o.multiply(f,l),m=o.map(a,r);m.multiply(p),m.multiply(this.learning_constant);let w=o.transpose(e),_=o.multiply(m,w);this.weights_ih.add(_),this.bias_h.add(m)}}const n=9,h=18,l=9;let d,u,c;$(document).ready(function(){var t;c=new class{constructor(){this.moves=[0,1,2,3,4,5,6,7,8],this.setPlayers(),this.update()}playMove(t,s){return s>=this.moves.length||s<0?1:\"x\"===this.moves[s]||\"o\"===this.moves[s]?1:(this.moves[s]=t,this.flipTurn(),void this.update())}flipTurn(){1===this.turn?this.turn=2:this.turn=1}update(){this.moves.map((t,s)=>{\"x\"!==t&&\"o\"!==t?$(\"#\"+s).text(\" \"):$(\"#\"+s).text(t)})}setPlayers(){0===Math.floor(2*Math.random())?(this.human=\"x\",this.computer=\"o\"):(this.human=\"o\",this.computer=\"x\"),$(\"#players\").text(\"Human: \"+this.human+\" | Computer: \"+this.computer)}},t=Math.floor(4),d=t,u=function(t,s,e,o){let i=[];for(let r=0;r<t;r++)i.push(new a(s,e,o));return i}(2*t,n,h,l)})}]);","extractedComments":[]}